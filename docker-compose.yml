services:

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
      target: build
    container_name: spa-frontend
    restart: always
    tty: true
    working_dir: /app/frontend
    volumes:
      - ./:/app/frontend
      - /app/frontend/node-backend
      - /app/frontend/node_modules
    command: ["sh", "-c", "npm install && npm start"] # Watch for changes and rebuild
    depends_on:
      - db
      - backend
    ports:
      - "3000:3000"
    networks:
      - node-network
    profiles:
      - dev
      - prod
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: '2g'

  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
      target: build
    container_name: spa-backend
    restart: always
    tty: true
    working_dir: /app/backend
    volumes:
      - ./node-backend:/app/backend
      - /app/backend/node_modules
    command: ["sh", "-c", "npm install && npm run dev"] # Watch for changes and rebuild
    depends_on:
      - db
    ports:
      - "8080:8080"
    networks:
      - node-network
    profiles:
      - dev
      - prod
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: '2g'

  db:
    image: postgres
    container_name: spa-db
    restart: always
    tty: true
    volumes:
      - ./data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=1234
    ports:
      - "5432:5432"
    networks:
      - node-network
    profiles:
      - dev
      - prod
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: '2g'

networks:
  node-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.191.0.0/16

